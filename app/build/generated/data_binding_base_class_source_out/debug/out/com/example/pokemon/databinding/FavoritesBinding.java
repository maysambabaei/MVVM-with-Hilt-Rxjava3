// Generated by view binder compiler. Do not edit!
package com.example.pokemon.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.pokemon.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FavoritesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RecyclerView favoritesRecyclerView;

  @NonNull
  public final TextView noFavoritesText;

  private FavoritesBinding(@NonNull RelativeLayout rootView,
      @NonNull RecyclerView favoritesRecyclerView, @NonNull TextView noFavoritesText) {
    this.rootView = rootView;
    this.favoritesRecyclerView = favoritesRecyclerView;
    this.noFavoritesText = noFavoritesText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FavoritesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FavoritesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.favorites, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FavoritesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      RecyclerView favoritesRecyclerView = rootView.findViewById(R.id.favoritesRecyclerView);
      if (favoritesRecyclerView == null) {
        missingId = "favoritesRecyclerView";
        break missingId;
      }
      TextView noFavoritesText = rootView.findViewById(R.id.noFavoritesText);
      if (noFavoritesText == null) {
        missingId = "noFavoritesText";
        break missingId;
      }
      return new FavoritesBinding((RelativeLayout) rootView, favoritesRecyclerView,
          noFavoritesText);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
